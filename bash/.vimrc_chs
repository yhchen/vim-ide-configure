" this file was create by ethan chan 2011.10.01
" version 1.0.0.0
"
" edit at 2011.12.06 by 'ethan chan'
" version  : 1.1.0.0
" modified : add map <C-x> <C-v> <C-c> <C-a>
"
"
set tags=tags;

let &termencoding=&encoding

" 设置中文支持
set fileencodings=utf-8,gbk,ucs-bom,cp936

"设置文件格式为unix（非doc）
set fileformats=unix
" set encoding=prc

colorsche desert256
set t_Co=256

" 去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限
set nocompatible

" 显示行号
set number

" 语法高亮度显示
syntax on
syntax enable

" 设置匹配模式，类似当输入一个左括号时会匹配相应的那个右括号
" 高亮显示匹配的括号
set showmatch

" 在编辑过程中，在右下角显示光标位置的状态行
set ruler
" 
" 查询自动跳转到第一个符合的单词处
set incsearch

" 我的状态行显示的内容（包括文件类型和解码）
" set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}
" set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]

" 增强模式中的命令行自动完成操作
set wildmenu

" 使回格键（backspace）正常处理indent, eol, start等
set backspace=2

" 允许backspace和光标键跨越行边界
set whichwrap+=<,>,h,l

" 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）
" set mouse=a
" set selection=exclusive
" set selectmode=mouse,key

" 通过使用: commands命令，告诉我们文件的哪一行被改变过
set report=0

" 启动的时候不显示那个援助索马里儿童的提示
set shortmess=atI

" 在被分割的窗口间显示空白，便于阅读
set fillchars=vert:\ ,stl:\ ,stlnc:\

" 高亮搜索关键字
set hlsearch

" 匹配括号高亮的时间（单位是十分之一秒）
set matchtime=5

" 光标移动到buffer的顶部和底部时保持3行距离
set scrolloff=3

" 为C程序提供自动缩进
" set smartindent


" 第一行设置tab键为2个空格，第二行设置当行之间交错时使用2个空格 

set tabstop=2 
set shiftwidth=2 

" 设置空格自动删除个数为2
set softtabstop=2

" 自动切换当前目录为当前文件所在的目录
set autochdir

" 设置*.pc文件的高亮
" autocmd BufEnter *.pc set filetype=esqlc
" if exists("did_load_filetypes") 
"     finish 
" endif 
" augroup filetypedetect 
"     au! BufRead,BufNewFile *.pc setfiletype proc 
" augroup END 

" 设置文件类型检查
filetype plugin on
filetype plugin indent on

" 已经出现提示菜单后输入字母实现即时的过滤和匹配i
set completeopt=longest,menu

" 设置tags的路径
set tags+=/usr/include/tags,$ORACLE_HOME/precomp/public/tags,/usr/lib/gcc-lib/i386-redhat-linux/3.2.3/tags,

" 设置TagList启动
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1

" 将文件浏览器与Tlist合并
let g:winManagerWindowLayout='FileExplorer|TagList'
nmap wm :WMToggle<cr>

" cscope配置
" :set cscopequickfix=s-,c-,d-,i-,t-,e-

" MiniBufExplorer 配置 
let g:miniBufExplMapWindowNavVim = 1 
let g:miniBufExplMapWindowNavArrows = 1 
let g:miniBufExplMapCTabSwitchBufs = 1 
let g:miniBufExplModSelTarget = 1 

" 用浅色和下划线高亮当前行
autocmd InsertLeave * se nocul
autocmd InsertEnter * se cul


" a.vim在.c .h 之间切换
nnoremap <silent> <F12> :A<CR>

" 在对应的函数、变量处按F3就可以grep工程下的相关文件
nnoremap <silent> <F3> :Grep<CR>

" SuperTab 配置
let g:SuperTabRetainCompletionType=2
let g:SuperTabDefaultCompletionType="<C-X><C-O>"

map RR <C-W><C-L>
map LL <C-W><C-H>
map DD <C-W><C-J>
map UU <C-W><C-K>


" 定义剪切命令
" unmap <C-x>
" map <C-x> "+x<CR>
" imap <C-x> <Esc>"+x<CR>i
vmap <C-x> x<CR>i

" 定义复制命令
" unmap <C-c>
" map <C-c> "+y<CR>
" imap <C-c> <Esc>"+y<CR>i
vmap <C-c> y<CR>i

" 定义粘贴命令
" 与块命令冲突，暂时不启用
" unmap <C-v>
" map <C-v> "+gp<CR>
" imap <C-v> <Esc>"+gp<CR>i
" map <C-v> gp<CR>
" imap <C-v> <Esc>gp<CR>i

" 定义撤销命令
" unmap <C-z>
map <C-z> u
imap <C-z> <Esc>ui

" 编辑模式下 Ctrl+o 插入新行
" unmap <C-o>
" imap <C-o> <Esc>o

" Ctrl+a 全选
map <C-a> ggVG
imap <C-a> <Esc>ggVGi
vmap <C-a> <Esc>ggVGi

" Ctrl+s 保存文件
" unmap <C-s>
" map <C-s> :w<CR>
" imap <C-s> <Esc>:w<CR>i
" cmap <C-s> :w<CR>




" F5编译和运行C程序，F6编译和运行C++程序
" 请注意，下述代码在windows下使用会报错
" 需要去掉./这两个字符

" C的编译和运行
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
exec "w"
exec "!gcc % -o %<"
exec "! ./%<"
exec "cw"
endfunc
" 
" C++的编译和运行
map <F6> :call CompileRunGpp()<CR>
func! CompileRunGpp()
exec "w"
exec "!g++ % -o %<"
exec "! ./%<"
exec "cw"
endfunc

" 能够漂亮地显示.NFO文件
" set encoding=utf-8
" function! SetFileEncodings(encodings)
"     let b:myfileencodingsbak=&fileencodings
"     let &fileencodings=a:encodings
" endfunction
" function! RestoreFileEncodings()
"     let &fileencodings=b:myfileencodingsbak
"     unlet b:myfileencodingsbak
" endfunction
" 
" au BufReadPre *.nfo call SetFileEncodings('cp437')|set ambiwidth=single
" au BufReadPost *.nfo call RestoreFileEncodings()

